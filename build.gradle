plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.eclipse.persistence:org.eclipse.persistence.core:3.0.2'
    implementation 'org.eclipse.persistence:org.eclipse.persistence.jpa:3.0.2'
    implementation 'org.eclipse.persistence:org.eclipse.persistence.jpa.modelgen.processor:3.0.2'
    implementation 'org.eclipse.persistence:org.eclipse.persistence.oracle:3.0.2'

    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    testImplementation 'nl.jqno.equalsverifier:equalsverifier:3.9'
}

test {
    useJUnitPlatform()
}

//
// EclipseLink static weaving Gradle task
//
configurations {
    weaver.extendsFrom implementation
    integrationTestCompile.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

task weave(type: JavaExec, dependsOn: [
        compileJava,
        processResources
]) {
    main = 'org.eclipse.persistence.tools.weaving.jpa.StaticWeave'
    classpath configurations.weaver
    args '-persistenceinfo'
    args processResources.destinationDir.absolutePath
    args '-classpath'
    args configurations.compileClasspath.incoming.files.asPath
    args '-loglevel'
    args 'INFO'
    args sourceSets.main.java.outputDir.absolutePath
    args sourceSets.main.java.outputDir.absolutePath

    inputs.files fileTree(processResources.destinationDir).matching({ pattern -> pattern.include('**/META-INF/persistence.xml') })
}
classes.dependsOn weave